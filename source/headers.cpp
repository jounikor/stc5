//
//
//
//

#include <iostream>
#include <cstring>

#include "headers.h"
#include "bitutils.h"
#include "fio.h"

//
//
//
//


namespace Headers {

	unsigned char fxe[FXE_HEADER_SIZE];			// magic number :)


	//
	// Build FXE header..
	//
	// I use prebuild binary and do not build the header manually. Check
	// e.g. b2fxe source how to create one.
	//
	//
  
	int saveFXEHeader( int type, FWriter* w, char *title, char *author, char* bmpfile, char *rawfile, char* icondata ) {
		return 0;
	}
  
	int fixFXEHeader( int type, FWriter* w, long size ) {
		return 0;
	}






	//
	//
	//
	

	int saveS405ABSHeader( FWriter* w ) {


        static unsigned char s405_abs_dec[496] = {
	        0x43,0xf9,0x00,0x04,0x00,0x00,0x48,0x79,
	        0x00,0x04,0x00,0x00,0x45,0xf9,0x00,0x07,
            0xf5,0xe0,0x41,0xfa,0x01,0xe0,0x26,0x49,
            0x28,0x48,0x70,0x00,0x30,0x1c,0xd9,0xc0,
            0x66,0xfa,0xd7,0xd4,0xb9,0xc9,0x63,0x0e,
            0xb9,0xcb,0x62,0x0a,0x36,0xa4,0x37,0x24,
            0xb9,0xc8,0x62,0xfa,0x20,0x4b,0x54,0x48,
            0x4a,0x60,0x66,0x12,0x2c,0x78,0x00,0x04,
            0x0c,0x6e,0x00,0x25,0x00,0x14,0x65,0x04,
            0x48,0x6e,0xfd,0x84,0x4e,0x75,0x2e,0x18,
            0x7c,0x00,0x48,0x47,0x49,0xea,0x0a,0x00,
            0x76,0x10,0x70,0x0f,0x47,0xea,0x07,0x40,
            0x17,0x80,0x00,0x00,0x51,0xc8,0xff,0xfa,
            0x26,0x4c,0x78,0x1d,0x7a,0x00,0x20,0x07,
            0xe8,0xa8,0xea,0x58,0x80,0x45,0x36,0xc0,
            0x72,0x03,0x61,0x7a,0x52,0x45,0xba,0x43,
            0x65,0xec,0x61,0x00,0x00,0xb6,0xeb,0x4b,
            0x28,0x4a,0x61,0x7e,0xe2,0x4b,0x61,0x7a,
            0x61,0x78,0x2c,0x4a,0x61,0x46,0x94,0x43,
            0x6e,0x06,0x67,0x9c,0x12,0xc2,0x60,0xf2,
            0x53,0x42,0x6f,0x24,0x3a,0x02,0x4d,0xea,
            0x04,0x80,0x61,0x30,0x38,0x02,0x66,0x04,
            0x38,0x0d,0x60,0x12,0x08,0x84,0x00,0x07,
            0x67,0x0c,0xe1,0x4c,0x4d,0xea,0x07,0x00,
            0x61,0x1a,0x18,0x02,0x3a,0x44,0x38,0x44,
            0x30,0x05,0x2c,0x49,0x9d,0xcc,0x12,0xde,
            0x51,0xc8,0xff,0xfc,0x33,0xc6,0x00,0xdf,
            0xf1,0x80,0x60,0xb6,0x26,0x4e,0xbe,0x9e,
            0x62,0xfc,0x4c,0xae,0x00,0x03,0x00,0x3c,
            0x24,0x07,0x42,0x42,0xe3,0xba,0x94,0x40,
            0xd4,0x42,0x34,0x33,0x20,0x00,0x9c,0x41,
            0x6c,0x0c,0xdc,0x41,0xed,0xaf,0x3e,0x18,
            0x92,0x46,0x7c,0x10,0x9c,0x41,0xe3,0xaf,
            0x4e,0x75,0x49,0xec,0x00,0x80,0x2a,0x4c,
            0x7a,0x00,0x4d,0xea,0x09,0x80,0x61,0xc4,
            0x4d,0xea,0x07,0x40,0xdc,0xc2,0x30,0x02,
            0x14,0x16,0x60,0x04,0x1d,0x66,0x00,0x01,
            0x51,0xc8,0xff,0xfa,0x1c,0x82,0xea,0x5a,
            0x84,0x45,0x3a,0xc2,0x52,0x45,0xb6,0x45,
            0x66,0xd8,0x48,0xe7,0x13,0x00,0x78,0x01,
            0x3c,0x3c,0x07,0xff,0x2c,0x4c,0x30,0x1c,
            0xb0,0x46,0x63,0x20,0x3a,0x04,0xda,0x45,
            0x34,0x05,0x3d,0x80,0x50,0xfe,0xe4,0x4d,
            0x67,0x10,0xda,0x45,0x32,0x36,0x50,0xfe,
            0xb0,0x41,0x63,0x06,0x3d,0x81,0x20,0xfe,
            0x60,0xe6,0x52,0x44,0x53,0x43,0x66,0xd6,
            0x55,0x44,0x6b,0x76,0x36,0x04,0xd8,0x44,
            0x47,0xf6,0x40,0x02,0x42,0x53,0x32,0x23,
            0x36,0x96,0x7a,0x02,0x34,0x05,0xd4,0x42,
            0xb4,0x44,0x62,0x1e,0x67,0x0c,0x30,0x36,
            0x20,0x00,0xb0,0x76,0x20,0xfe,0x63,0x02,
            0x54,0x42,0xb2,0x76,0x20,0xfe,0x64,0x0a,
            0x3d,0xb6,0x20,0xfe,0x50,0xfe,0x3a,0x02,
            0x60,0xda,0x3d,0x81,0x50,0xfe,0x55,0x44,
            0x6e,0xcc,0x4b,0xee,0xff,0x80,0x74,0x40,
            0x78,0x00,0x7e,0x0b,0x30,0x16,0x22,0x16,
            0xee,0x68,0xee,0x69,0x92,0x40,0x67,0x16,
            0x7a,0xff,0xe1,0x6d,0x8a,0x44,0xe0,0xbd,
            0x2a,0xc5,0x3a,0x04,0x9a,0x42,0x48,0x45,
            0x3a,0x00,0x2b,0x45,0x00,0x3c,0x52,0x44,
            0xe3,0xac,0x52,0x42,0xcd,0x5e,0x51,0xcb,
            0xff,0xd4,0x4c,0xdf,0x00,0xc8,0x4e,0x75
        };

		return w->write(s405_abs_dec,sizeof(s405_abs_dec));
	}
	
	int fixS405ABSHeader( FWriter* w, long offset, const fixInfo* fix ) {
		long dataStart;
		unsigned char b[4*19];
		unsigned char* p = NULL;


		w->seek(FXE3_FIX_DATAEND_POS+offset,IO_SEEK_SET);
		return w->write(b,4*19);
	} 


	//
	//
	//



    unsigned char fxe3_crt0_bin [FXE3_CRT0_SIZE] = {
     0x0e,0x00,0x00,0xea,0x00,0x00,0x00,0x0c,
     0x48,0x03,0x00,0x0c,0x48,0x03,0x00,0x0c,
     0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
     0x00,0x00,0x00,0x00,0x11,0x00,0x45,0x44,
     0x11,0x00,0x45,0x44,0x00,0x00,0x00,0x00,
     0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
     0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
     0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
     0x10,0x00,0x1f,0xe5,0x10,0x10,0x1f,0xe5,
     0x03,0x20,0xa0,0xe3,0x07,0x00,0x2d,0xe9,
     0x0d,0x00,0xa0,0xe1,0x00,0x00,0x51,0xe3,
     0x0d,0x00,0x00,0x1f,0x05,0x00,0xa0,0xe3,
     0x0b,0x00,0x00,0xef,0x03,0xc0,0xc0,0xe3,
     0x64,0xb0,0x1f,0xe5,0x60,0x90,0x1f,0xe5,
     0x0b,0xb0,0x49,0xe0,0x04,0xa0,0x39,0xe5,
     0x04,0xb0,0x5b,0xe2,0x04,0xa0,0x2c,0x15,
     0xfb,0xff,0xff,0x1a,0x58,0x90,0x1f,0xe5,
     0x08,0x00,0x9c,0xe4,0x04,0x00,0x89,0xe4,
     0x13,0xdc,0x4d,0xe2,0x10,0xa0,0xa0,0xe3,
     0x10,0x00,0x5a,0xe3,0x04,0xc0,0x4c,0x02,
     0x02,0xc0,0x4c,0x12,0xb2,0x80,0xdc,0xe0,
     0x00,0x00,0x58,0xe3,0x99,0x00,0x00,0x0a,
     0xb2,0xb0,0xdc,0xe0,0x10,0xa0,0xa0,0xe3,
     0xb2,0x10,0xdc,0xe0,0x0b,0xb8,0x81,0xe1,
     0x02,0x27,0xa0,0xe3,0x10,0x30,0xa0,0xe3,
     0x0d,0x40,0xa0,0xe1,0x46,0x00,0x00,0xeb,
     0x84,0x60,0x8d,0xe2,0x03,0x10,0xa0,0xe3,
     0x20,0x00,0x61,0xe2,0x3a,0x00,0x00,0xeb,
     0x00,0x18,0x85,0xe1,0x04,0x10,0x86,0xe4,
     0x01,0x50,0x85,0xe2,0x03,0x00,0x55,0xe1,
     0xf7,0xff,0xff,0x3a,0x55,0x00,0x00,0xeb,
     0x0f,0x00,0xa0,0xe3,0xc8,0x70,0x8d,0xe2,
     0x00,0x00,0xc7,0xe7,0x01,0x00,0x50,0xe2,
     0xfc,0xff,0xff,0x5a,0x01,0x26,0xa0,0xe3,
     0x02,0x3c,0xa0,0xe3,0xd8,0x40,0x8d,0xe2,
     0x33,0x00,0x00,0xeb,0x37,0x00,0x00,0xeb,
     0x01,0x3c,0xa0,0xe3,0x97,0x4e,0x8d,0xe2,
     0x2f,0x00,0x00,0xeb,0x33,0x00,0x00,0xeb,
     0xe1,0x4e,0x8d,0xe2,0x2c,0x00,0x00,0xeb,
     0x30,0x00,0x00,0xeb,0xd8,0x20,0x8d,0xe2,
     0x18,0x00,0x00,0xeb,0x01,0x3c,0x52,0xe2,
     0x13,0x00,0x00,0x4a,0xd1,0xff,0xff,0x0a,
     0x01,0x30,0x53,0xe2,0x05,0x30,0xa0,0x01,
     0x06,0x40,0xa0,0x01,0x0c,0x00,0x00,0x0a,
     0x03,0x50,0xa0,0xe1,0x97,0x2e,0x8d,0xe2,
     0x0e,0x00,0x00,0xeb,0x00,0x00,0x52,0xe3,
     0x07,0x40,0xa0,0x01,0x05,0x00,0x00,0x0a,
     0x7f,0x40,0x02,0xe2,0x02,0x00,0x54,0xe1,
     0xe1,0x2e,0x8d,0x12,0x07,0x00,0x00,0x1b,
     0x04,0x44,0x82,0x11,0x04,0x70,0xa0,0x11,
     0x04,0x60,0xa0,0xe1,0x04,0x20,0x59,0xe7,
     0x01,0x30,0x53,0xe2,0x01,0x20,0xc9,0xe4,
     0xfb,0xff,0xff,0x5a,0xe4,0xff,0xff,0xea,
     0x84,0x80,0x82,0xe2,0x08,0x10,0x92,0xe4,
     0x01,0x00,0x5b,0xe1,0xfc,0xff,0xff,0x8a,
     0xb2,0x10,0x52,0xe1,0xb4,0x20,0x52,0xe1,
     0x20,0x00,0x61,0xe2,0x3b,0x20,0x62,0xe0,
     0x02,0x21,0x98,0xe7,0x01,0xa0,0x5a,0xe0,
     0x3b,0x00,0xa0,0xe1,0x1b,0xb1,0xa0,0xe1,
     0xb2,0x10,0xdc,0xd0,0x00,0xa0,0x6a,0xd2,
     0x11,0xba,0x8b,0xd1,0x10,0xa0,0x7a,0xd2,
     0x0e,0xf0,0xa0,0xe1,0x84,0x10,0x84,0xe2,
     0x03,0x21,0x81,0xe7,0x00,0x50,0xa0,0xe3,
     0x04,0x50,0x01,0xe5,0x0e,0xf0,0xa0,0xe1,
     0x04,0x40,0x2d,0xe9,0x00,0x50,0xa0,0xe3,
     0x84,0x60,0x84,0xe2,0x08,0x20,0x8d,0xe2,
     0xe4,0xff,0xff,0xeb,0x02,0x00,0xa0,0xe1,
     0x02,0x20,0xd7,0xe7,0x00,0x70,0x87,0xe0,
     0x00,0x00,0x50,0xe3,0x01,0x10,0x57,0xc5,
     0x01,0x00,0x40,0xc2,0x01,0x10,0x47,0xc4,
     0xfa,0xff,0xff,0xca,0x00,0x20,0xc7,0xe5,
     0x02,0x08,0x85,0xe1,0x05,0x01,0x86,0xe7,
     0x01,0x50,0x85,0xe2,0x03,0x00,0x55,0xe1,
     0xef,0xff,0xff,0x3a,0x04,0x40,0xbd,0xe8,
     0x9c,0x40,0x2d,0xe9,0x00,0x50,0xa0,0xe3,
     0x84,0x20,0x84,0xe2,0x05,0x01,0x92,0xe7,
     0x05,0x61,0x82,0xe0,0x04,0x10,0x36,0xe5,
     0x00,0x00,0x51,0xe1,0x04,0x10,0x86,0x85,
     0xfb,0xff,0xff,0x8a,0x04,0x00,0x86,0xe5,
     0x01,0x50,0x85,0xe2,0x03,0x00,0x55,0xe1,
     0xf5,0xff,0xff,0x3a,0x00,0x50,0xa0,0xe3,
     0x03,0x00,0x55,0xe1,0x9c,0x80,0xbd,0x28,
     0x05,0x11,0x92,0xe7,0x21,0x18,0xb0,0xe1,
     0x01,0x50,0x85,0x02,0xf9,0xff,0xff,0x0a,
     0x00,0x60,0xa0,0xe3,0x05,0x30,0x43,0xe0,
     0x05,0x11,0x92,0xe7,0x01,0x50,0x85,0xe2,
     0x06,0x11,0x82,0xe7,0x01,0x60,0x86,0xe2,
     0x03,0x00,0x56,0xe1,0xf9,0xff,0xff,0x9a,
     0x00,0x50,0xa0,0xe3,0x00,0x60,0xa0,0xe3,
     0x00,0x70,0xe0,0xe3,0xb2,0x00,0xd2,0xe1,
     0xb6,0x10,0xd2,0xe1,0x00,0x10,0x51,0xe0,
     0x05,0x00,0x00,0xda,0x37,0xe0,0xa0,0xe1,
     0x76,0xe0,0x8e,0xe1,0x04,0xe0,0x84,0xe4,
     0x05,0xe0,0x46,0xe0,0xb2,0xe0,0xc4,0xe0,
     0xb2,0x00,0xc4,0xe0,0x01,0x60,0x86,0xe2,
     0x16,0x61,0xa0,0xc1,0x01,0x50,0x85,0xe2,
     0x04,0x00,0x92,0xe4,0x03,0x00,0x55,0xe1,
     0x27,0x08,0x00,0xe0,0x04,0x00,0x02,0xe5,
     0xed,0xff,0xff,0x3a,0x9c,0x80,0xbd,0xe8,
     0x0d,0x00,0xa0,0xe1,0x01,0x40,0xa0,0xe3,
     0x0f,0x00,0x00,0xef,0x00,0x10,0x9d,0xe5,
     0x0d,0x20,0xa0,0xe1,0x01,0x30,0xd0,0xe4,
     0x01,0x10,0x51,0xe2,0x01,0x30,0xc2,0xe4,
     0xfb,0xff,0xff,0x5a,0x0d,0x10,0xa0,0xe1,
     0x14,0x03,0x1f,0xe5,0x05,0x00,0x00,0xef
    };


}
